# *************************************
# Author: Roman Nikolaev
# Email: nikolaev.rd@yandex.ru
# Site: http://nikolaev-rd.ru
# *************************************


# PHP-FPM ping (/ping)
#
# Return time in milliseconds
#
# More info:
# http://php.net/manual/en/install.fpm.configuration.php#ping.path
#
# Item format (numeric unsigned):
#   php.fpm.ping
#
UserParameter=php.fpm.ping[*],[ -z "$1" ] && url="http://127.0.0.1/ping" || url="$1"; start=$(date +%s%N); curl -sS "$url" > /dev/null 2>&1; echo $(( ($(date +%s%N) - $start) / 1000000 ))

# PHP-FPM metrics from satus page (/status)
#
# More info: 
# http://php.net/manual/en/install.fpm.configuration.php#pm.status-path
#
# Parameters:
#   $1 - url path to PHP-FPM status page (Default: "http://127.0.0.1/status")
#   $2 - metric from status page to collect (Default: "total processes")
#        ● pool                 - text
#        ● process manager      - text
#        ● start since          - numeric unsigned
#        ● accepted conn        - numeric unsigned
#        ● listen queue         - numeric unsigned
#        ● max listen queue     - numeric unsigned
#        ● listen queue len     - numeric unsigned
#        ● idle processes       - numeric unsigned
#        ● active processes     - numeric unsigned
#        ● total processes      - numeric unsigned
#        ● max active processes - numeric unsigned
#        ● max children reached - numeric unsigned
#        ● slow requests        - numeric unsigned
#
# Item format:
#   php.fpm[URL,METRIC_NAME]
#
# Example:
#   php.fpm["http://127.0.0.1/status","start since"]
#
UserParameter=php.fpm[*],[ -z "$1" ] && url="http://127.0.0.1/status" || url="$1"; [ -z "$2" ] && metric="total processes" || metric="$2"; curl -sS "$url" | grep -oP "(?<=^$$metric:) .*" | tr -d '[:space:]'

# PHP-FPM metrics from full status page - per process info (/status?full)
# 
# Parameters:
#   $1 - url path to PHP-FPM status page (Default: "http://127.0.0.1/status").
#        Path to short status page only, without '?full' suffix (already added)
#
#   $2 - metric from status page to collect 
#        ● requests (default)  - numeric unsigned
#        ● request duration    - numeric unsigned
#        ● content length      - numeric unsigned
#        ● last request cpu    - numeric float
#        ● last request memory - numeric unsigned
#        
#   $3 - function for aggregation: 
#        ● total (default) - numeric unsigned
#        ● max             - numeric unsigned
#        ● min             - numeric unsigned
#        ● avg             - numeric float
#
# Item format:
#   php.fpm.processes[URL,METRIC_NAME,METRIC_AGGREGATION]
#
# Examples:
#   php.fpm.processes["http://127.0.0.1/status","requests","total"]
#   php.fpm.processes["http://127.0.0.1/status","last request memory","max"]
#
UserParameter=php.fpm.processes[*],[ -z "$1" ] && url="http://127.0.0.1/status?full" || url="$1?full"; [ -z "$2" ] && metric='^requests' || metric="^$2"; [ -z "$3" ] && agg="total" || agg="$2"; curl -sS "$url" 2>/dev/null | awk -F':' -v metric="$metric" -v agg="$agg" 'BEGIN {min=1000000000; max=0} $$1 ~ metric {if ($$2<min+0) min=$$2; if ($$2>max+0) max=$$2; total+=$$2; count++;} END {if (agg=="min") print min; else if (agg=="max") print max; else if (agg=="avg") print total/count; else print total}'

# PHP version
#
# Item format (text):
#   php.php.version
#
UserParameter=php.version,php --version 2>/dev/null | grep -oP "(?<=^PHP )[0-9\.]+"
